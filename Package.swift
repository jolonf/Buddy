// swift-tools-version: 6.1

// WARNING:
// This file is automatically generated.
// Do not edit it by hand because the contents will be replaced.

import PackageDescription
// No AppleProductTypes import

let package = Package(
    name: "Buddy",
    platforms: [
        .macOS(.v15), // Executable can run on macOS, add platform for SwiftUI
        // .iOS("17.0") // Temporarily remove iOS if focusing on macOS only
    ],
    products: [
        // Define a standard executable product
        .executable(name: "Buddy", targets: ["Buddy"])
    ],
    dependencies: [
        // Add the main MLX Swift package
        .package(url: "https://github.com/ml-explore/mlx-swift", from: "0.21.2"),
        // Reference the specific fork and branch for examples
        .package(url: "https://github.com/jolonf/mlx-swift-examples", branch: "feature/prompt-caching"),
        // Add Hugging Face Swift Transformers package
        .package(url: "https://github.com/huggingface/swift-transformers", from: "0.1.17")
    ],
    targets: [
        .executableTarget(
            name: "Buddy",
            dependencies: [
                // Products from ml-explore/mlx-swift
                .product(name: "MLX", package: "mlx-swift"),
                .product(name: "MLXRandom", package: "mlx-swift"),
                .product(name: "MLXNN", package: "mlx-swift"),
                .product(name: "MLXOptimizers", package: "mlx-swift"),
                // Products from jolonf/mlx-swift-examples (fork)
                // Assuming the package name for mlx-swift-examples is derived correctly by SPM.
                // If it also has a custom name in its Package.swift, that would need similar adjustment.
                // For now, assume "mlx-swift-examples" is correct.
                .product(name: "MLXLLM", package: "mlx-swift-examples"),
                .product(name: "MLXLMCommon", package: "mlx-swift-examples"),
                // Products from huggingface/swift-transformers
                // CHANGE: package name from "swift-transformers" to "Transformers"
                .product(name: "Transformers", package: "swift-transformers"),
                // .product(name: "Tokenizers", package: "swift-transformers"), // Add if MLXLLM doesn't provide its own
            ],
            path: ".",
            // Exclude common directories from the build target
            exclude: ["docs", ".git", ".gitignore", ".build", ".vscode", ".swiftpm", "README.md"],
            sources: ["Sources"], // Explicitly specify source directory
            resources: [ // Add this resources block
                .copy("Resources")
            ]
        )
    ]
)
